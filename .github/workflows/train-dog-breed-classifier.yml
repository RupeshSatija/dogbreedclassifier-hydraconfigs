name: Train Dog Breed Classifier

on:
  workflow_run:
    workflows: ["Test Classifier Code and Create Docker Image"]  # Name of the first workflow
    types:
      - completed  # Trigger this workflow when the first one completes

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  train:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker Image
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dogbreed-classifier-withhydraconfigs
          # Adjust the tag if necessary

      - name: Run Training
        id: training
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dogbreed-classifier-withhydraconfigs python src/train.py trainer.max_epochs=5 model.model_name=resnet18

      - name: Check Accuracy
        run: |
          # Extract test accuracy from the log file
          TEST_ACC=$(grep -o "'test/acc': [0-9.]*" logs/train.log | grep -o '[0-9.]*')
          echo "Test Accuracy: $TEST_ACC"
          
          # Convert to percentage (multiply by 100)
          ACC_PERCENTAGE=$(echo "$TEST_ACC * 100" | bc)
          echo "Accuracy Percentage: $ACC_PERCENTAGE%"
          
          # Check if accuracy is less than 95%
          if (( $(echo "$ACC_PERCENTAGE < 95" | bc -l) )); then
            echo "Training failed: Accuracy is less than 95%"
            exit 1
          else
            echo "Training passed: Accuracy is above 95%"
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: |
            ./logs/train/dogbreed_classifier/runs/*/checkpoints/*.ckpt
            ./logs/train/dogbreed_classifier/runs/*/tensorboard/
