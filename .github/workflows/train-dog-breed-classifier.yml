name: Train Dog Breed Classifier

on:
  workflow_run:
    workflows: ["Train Dog Classifier Model and Run Tests"]  # Name of the first workflow
    types:
      - completed  # Trigger this workflow when the first one completes

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  train:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker Image
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dogbreed-classifier-withhydraconfigs
          # Adjust the tag if necessary

      - name: Run Training
        id: training
        run: |
          docker run --rm ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:dogbreed-classifier-withhydraconfigs python src/train.py +max_epochs=5 +model_name=resnet18 --output_dir ./output
          # Assuming src/train.py is your training script and it outputs logs and checkpoints to ./output

      - name: Check Accuracy
        run: |
          # Assuming your training script outputs accuracy to a file or prints it
          accuracy=$(cat ./output/accuracy.txt)  # Adjust this to your actual output method
          echo "Accuracy: $accuracy"
          if (( $(echo "$accuracy < 95" | bc -l) )); then
            echo "Training failed: Accuracy is less than 95%"
            exit 1
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: model-artifacts
          path: |
            ./output/checkpoint.pth  # Adjust to your actual checkpoint file
            ./output/logs/  # Adjust to your actual logs directory
            ./output/config.yaml  # Adjust to your actual config file